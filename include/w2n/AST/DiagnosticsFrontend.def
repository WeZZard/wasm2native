//===--- DiagnosticsFrontend.def - Diagnostics Text -------------*- C++
//-*-===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2020 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project
// authors
//
//===----------------------------------------------------------------------===//
//
//  This file defines diagnostics emitted in processing command-line
//  arguments and setting up compilation. Each diagnostic is described
//  using one of three kinds (error, warning, or note) along with a unique
//  identifier, category, options, and text, and is followed by a
//  signature describing the diagnostic argument kinds.
//
//===----------------------------------------------------------------------===//

#define DEFINE_DIAGNOSTIC_MACROS
#include "DefineDiagnosticMacros.h"

ERROR(
  error_wrong_number_of_arguments,
  none,
  "wrong number of '%0' arguments (expected %1, got %2)",
  (StringRef, int, int)
)

ERROR(
  error_formatting_multiple_file_ranges,
  none,
  "file ranges don't support multiple input files",
  ()
)

ERROR(error_formatting_invalid_range, none, "file range is invalid", ())

WARNING(
  stats_disabled,
  none,
  "compiler was not built with support for collecting statistics",
  ()
)

WARNING(
  tbd_warn_truncating_version,
  none,
  "truncating %select{current|compatibility}0 version '%1' in TBD file "
  "to fit in 32-bit space used by old mach-o format",
  (unsigned, StringRef)
)

ERROR(
  tbd_err_invalid_version,
  none,
  "invalid dynamic library %select{current|compatibility}0 version '%1'",
  (unsigned, StringRef)
)

WARNING(
  tbd_only_supported_in_whole_module,
  none,
  "TBD generation is only supported when the whole module can be seen",
  ()
)

ERROR(
  tbd_not_supported_with_cmo,
  none,
  "Test-Based InstallAPI (TBD) is not support with "
  "cross-module-optimization",
  ()
)

ERROR(
  unknown_platform_name,
  none,
  "unknown platform name %0",
  (StringRef)
)

#define UNDEFINE_DIAGNOSTIC_MACROS
#include "DefineDiagnosticMacros.h"
